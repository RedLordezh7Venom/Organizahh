name: NewTkApp CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'newtkapp.py'
      - 'test_newtkapp*.py'
      - 'requirements.txt'
      - '.github/workflows/newtkapp-ci.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'newtkapp.py'
      - 'test_newtkapp*.py'
      - 'requirements.txt'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb python3-tk
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8
        pip install -r requirements.txt
        
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 newtkapp.py --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings
    #     flake8 newtkapp.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    # - name: Create test file for newtkapp
    #   run: |
    #     cat > test_newtkapp.py << 'EOL'
    #     import pytest
    #     import os
    #     import json
    #     from unittest.mock import MagicMock, patch, mock_open
        
    #     # Import the module to test
    #     import newtkapp
        
    #     class TestFileOrganizer:
    #         @patch('os.path.exists')
    #         @patch('json.load')
    #         def test_load_backbone_success(self, mock_json_load, mock_exists):
    #             """Test successful backbone loading."""
    #             mock_exists.return_value = True
    #             mock_data = {"path1": {"category1": ["file1"]}}
    #             mock_json_load.return_value = mock_data
                
    #             # Create a mock for the app class
    #             app = MagicMock()
    #             app._load_backbone = newtkapp.FileOrganizerApp._load_backbone
    #             app.backbone = {}
                
    #             # Call the method
    #             result = app._load_backbone(app)
    #             assert result == mock_data
            
    #         @patch('os.path.exists')
    #         def test_load_backbone_not_found(self, mock_exists):
    #             """Test backbone file not found."""
    #             mock_exists.return_value = False
                
    #             # Create a mock for the app class
    #             app = MagicMock()
    #             app._load_backbone = newtkapp.FileOrganizerApp._load_backbone
                
    #             # Call the method
    #             result = app._load_backbone(app)
    #             assert result == {}
    #     EOL
        
    # - name: Test with pytest on Linux
    #   if: runner.os == 'Linux'
    #   run: |
    #     xvfb-run --auto-servernum pytest test_newtkapp.py -v
        
    # - name: Test with pytest on Windows/macOS
    #   if: runner.os != 'Linux'
    #   run: |
    #     pytest test_newtkapp.py -v

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.10']
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --name=newtkapp --windowed --onefile newtkapp.py
        
    # - name: Upload build artifacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: newtkapp-${{ runner.os }}
    #     path: dist/